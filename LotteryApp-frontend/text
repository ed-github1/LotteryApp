import React, { useState } from 'react'



const LotteryMatrix = () => {
  const [selectedCountry, setSelectedCountry] = useState(null)
  const [selections, setSelections] = useState({})

  const handleCountrySelect = (country) => {
    setSelectedCountry(country)
  }

  const handleNumberSelect = (countryCode, number) => {
    setSelections((prev) => ({
      ...prev,
      [countryCode]: number
    }))
  }

  const handleNextCountry = () => {
    setSelectedCountry(null)
  }

  return (
    <div className="max-w-screen mx-auto p-6">
      {/* Country Selection */}
      {!selectedCountry ? (
        <div className="mb-8 flex justify-center">
          <div className="relative flex flex-col items-center bg-white rounded-2xl shadow-lg px-8 py-6 border-l-8 border-orange-400 min-w-[280px] max-w-xs">
            {/* Ticket stub */}
            <div className="absolute left-0 top-0 h-full w-4 bg-orange-400 rounded-l-2xl flex flex-col items-center justify-center">
              <span
                className="text-[10px] text-white font-bold rotate-[-90deg] tracking-widest"
                style={{ letterSpacing: '2px', fontFamily: 'monospace' }}
              >
                TICKET
              </span>
            </div>
            <h2 className="text-2xl font-extrabold mb-6 text-orange-600 text-center tracking-wide">
              Select a Country
            </h2>
            <div className="flex flex-wrap gap-6 justify-center">
              {countryConfigs.map((country) => (
                <button
                  key={country.code}
                  onClick={() => handleCountrySelect(country)}
                  className={`flex flex-col items-center mx-2 my-2 focus:outline-none`}
                >
                  <span className="w-12 h-12 rounded-full flex items-center justify-center bg-gray-100 shadow mb-2 border-2
                    ${
                      selections[country.code]
                        ? 'border-blue-500'
                        : 'border-gray-200 hover:border-blue-400'
                    }
                  ">
                    <img
                      src={country.flag}
                      alt={country.name + ' flag'}
                      className="h-8 w-auto"
                    />
                  </span>
                  <span className="font-bold text-md text-gray-700">
                    {country.name}
                  </span>
                  {selections[country.code] && (
                    <span className="mt-2 px-3 py-1 rounded-full bg-blue-500 text-white text-xs font-bold shadow">
                      Selected: {selections[country.code]}
                    </span>
                  )}
                </button>
              ))}
            </div>
          </div>
        </div>
      ) : (
        <div className="mb-8">
          <h2 className="text-xl font-bold mb-4 text-center">
            Pick a Number for{' '}
            <span className="inline-flex items-center gap-2">
              <img
                src={selectedCountry.flag}
                alt={selectedCountry.name + ' flag'}
                className="h-6 w-auto"
              />
              <span>{selectedCountry.name}</span>
            </span>
          </h2>
          <div className="grid grid-cols-5 sm:grid-cols-10 gap-4 mb-6">
            {Array(selectedCountry.totalNumbers)
              .fill(0)
              .map((_, i) => (
                <button
                  key={i + 1}
                  onClick={() =>
                    handleNumberSelect(selectedCountry.code, i + 1)
                  }
                  className={`w-12 h-12 rounded-full font-bold border-2 transition
                    ${
                      selections[selectedCountry.code] === i + 1
                        ? 'bg-blue-500 text-white border-blue-500 shadow-lg'
                        : 'bg-gray-100 text-gray-700 border-gray-300 hover:bg-blue-100'
                    }
                  `}
                >
                  {i + 1}
                </button>
              ))}
          </div>
          <button
            onClick={handleNextCountry}
            disabled={!selections[selectedCountry.code]}
            className={`w-full py-3 rounded-xl font-bold shadow transition ${
              selections[selectedCountry.code]
                ? 'bg-blue-500 text-white hover:bg-blue-600'
                : 'bg-gray-300 text-gray-400 cursor-not-allowed'
            }`}
          >
            {selections[selectedCountry.code]
              ? 'Choose Another Country'
              : 'Select a Number to Continue'}
          </button>
        </div>
      )}

      {/* Single Ticket-style Result */}
      <div className="mt-8 flex justify-center">
        <div className="relative flex flex-col items-center bg-white rounded-2xl shadow-lg px-8 py-6 border-l-8 border-orange-400 min-w-[280px] max-w-xs">
          {/* Ticket stub */}
          <div className="absolute left-0 top-0 h-full w-4 bg-orange-400 rounded-l-2xl flex flex-col items-center justify-center">
            <span
              className="text-[10px] text-white font-bold rotate-[-90deg] tracking-widest"
              style={{ letterSpacing: '2px', fontFamily: 'monospace' }}
            >
              TICKET
            </span>
          </div>
          <h3 className="text-lg font-title mb-4 text-orange-600 text-center tracking-wide">
            Your Ticket
          </h3>
          <div className="flex flex-wrap gap-6 justify-centers">
            {countryConfigs
              .filter((country) => selections[country.code])
              .map((country) => (
                <div key={country.code} className="flex flex-col items-center">
                  <span className="size-5 rounded-full flex items-center justify-center bg-gray-100 shadow mb-2">
                    <img
                      src={country.flag}
                      alt={country.name + ' flag'}
                      className="h-6 w-auto"
                    />
                  </span>
                  <span className="size-10 flex items-center justify-center rounded-full bg-orange-500 text-white font-bold text-xl border-2 border-orange-600 shadow">
                    {selections[country.code]}
                  </span>
                </div>
              ))}
            {Object.values(selections).filter(Boolean).length === 0 && (
              <div className="text-gray-400 text-center py-8">
                No tickets selected yet.
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}

export default LotteryMatrix
